[gd_scene load_steps=14 format=2]

[ext_resource path="res://Building/BuildingBuilder.tscn" type="PackedScene" id=1]
[ext_resource path="res://Building/BuilderShader.tres" type="Shader" id=2]
[ext_resource path="res://Textures/BrainTex.png" type="Texture" id=3]
[ext_resource path="res://Building/building_tex.tex" type="Texture" id=4]

[sub_resource type="SphereShape" id=1]

[sub_resource type="SphereMesh" id=2]

[sub_resource type="SpatialMaterial" id=4]
albedo_color = Color( 0.0470588, 0.278431, 0, 1 )

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 4 )
size = Vector2( 100, 100 )

[sub_resource type="ShaderMaterial" id=8]
shader = ExtResource( 2 )
shader_param/height = 32.0
shader_param/building_tex = ExtResource( 4 )

[sub_resource type="CubeMesh" id=7]
material = SubResource( 8 )
size = Vector3( 10, 32, 10 )

[sub_resource type="CubeMesh" id=9]

[sub_resource type="Shader" id=10]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.2.stable.mono's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,vertex_lighting;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	ROUGHNESS=roughness;
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 3 )

[node name="Root" type="Spatial"]

[node name="Player" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.830217, 0.557441, 0, -0.557441, 0.830217, 0, 35.4447, 58.0052 )

[node name="RigidBody" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -60.1037, 13.0728, 0 )
visible = false
mass = 100.0
can_sleep = false
linear_velocity = Vector3( 100, 0, 0 )

[node name="CollisionShape" type="CollisionShape" parent="RigidBody"]
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="RigidBody"]
mesh = SubResource( 2 )
material/0 = null

[node name="RigidBody2" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3000, 13.073, 0 )
visible = false
mass = 1000.0
gravity_scale = 0.0
can_sleep = false
linear_velocity = Vector3( 1000, 0, 0 )

[node name="CollisionShape" type="CollisionShape" parent="RigidBody2"]
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="RigidBody2"]
mesh = SubResource( 2 )
material/0 = null

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.646852, 0 )
mesh = SubResource( 3 )
skeleton = NodePath("../RigidBody/MeshInstance")
material/0 = null

[node name="BuildingBuilder" parent="." instance=ExtResource( 1 )]

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0595703, 14.4, 0 )
material_override = SubResource( 8 )
mesh = SubResource( 7 )
material/0 = null

[node name="MeshInstance3" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 10.7697, 9.4, 0 )
mesh = SubResource( 9 )
skeleton = NodePath("../MeshInstance2")
material/0 = SubResource( 11 )
